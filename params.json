{"name":"Vv","tagline":"VV is a wrapper for command line tasks, it's most important feature is that it makes a noise when it is done, allowing me to background and do something else while the task completes, then I generally wrap some nice and ionice and /usr/bin/time -v into the command to make it nice and give me an idea of how long it took.  I added the time sync, to let me know how much of the above the kernel is trying to hide from me as well (of course the sync may reflect something else going on in the system, in any case I think it's a good idea to let the discs sync in general before other things commence and no need to alert me till afterwards)","body":"# vv\r\nVV is a wrapper for command line tasks, it's most important feature is that it makes a noise when it is done, allowing me to background and do something else while the task completes, then I generally wrap some nice and ionice and /usr/bin/time -v into the command to make it nice and give me an idea of how long it took.  I added the time sync, to let me know how much of the above the kernel is trying to hide from me as well (of course the sync may reflect something else going on in the system, in any case I think it's a good idea to let the discs sync in general before other things commence and no need to alert me till afterwards)\r\n\r\nnotes: I imagine there are some escaping issues that could be uncovered by throwing lot’s of interpretation snafu at it in $@  i.e. I imagine I’ll have to throw some escape trickery in there at some point.  I’ll fix it when I run into one of those cases, but for now I’m using this daily without issue.  I tend to escape things pretty heavily though, so I might not run into one of those cases anytime soon.\r\n\r\n## Install\r\n\r\nTrust me?\r\n\r\n```\r\ncurl https://raw.githubusercontent.com/joshuacox/vv/master/bootstrapvv.sh|bash\r\n```\r\n\r\nBut I recommend you clone the repo and read it first, it’s pretty short\r\n\r\nthen at your leisure\r\n\r\n`cp vv /usr/local/bin`\r\nor somewhere in your path\r\n\r\nalternatively if you want to install it to `/usr/local/bin/` then\r\n\r\n```\r\nsudo make install\r\n```\r\n\r\nor you can add hosts to a vv list in your ansible hosts file like so\r\n\r\n```\r\nexamplehost1 ansible_ssh_port=2222 ansible_ssh_host=1.2.3.4 ansible_ssh_user=root\r\nexamplehost2 ansible_ssh_port=2222 ansible_ssh_host=1.2.3.5 ansible_ssh_user=root\r\n\r\n[vv]\r\nexampleHost1\r\nexampleHost2\r\n```\r\nand use ansible to install to those hosts\r\n\r\n```\r\nmake play\r\n```\r\n\r\nlook at the included Makefile (as you should every Makefile for that matter before you `sudo make anything`)\r\nit merely uses the install command to copy the vv script to `/usr/local/bin` with mode 0755\r\n\r\n## Usage\r\njust place vv at the start of your command line\r\ne.g.\r\n```\r\nvv apt-get upgrade -y\r\n```\r\nor (I’ll give some example output in this one)\r\n\r\n```\r\nvv dd if=/dev/zero of=/tmp/testfile bs=1M count=4010     \r\n4010+0 records in\r\n4010+0 records out\r\n4204789760 bytes (4.2 GB) copied, 0.852751 s, 4.9 GB/s\r\n        Command being timed: \"nice ionice -c3 dd if=/dev/zero of=/tmp/testfile bs=1M count=4010\"\r\n        User time (seconds): 0.00\r\n        System time (seconds): 0.87\r\n        Percent of CPU this job got: 99%\r\n        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.87\r\n        Average shared text size (kbytes): 0\r\n        Average unshared data size (kbytes): 0\r\n        Average stack size (kbytes): 0\r\n        Average total size (kbytes): 0\r\n        Maximum resident set size (kbytes): 2872\r\n        Average resident set size (kbytes): 0\r\n        Major (requiring I/O) page faults: 0\r\n        Minor (reclaiming a frame) page faults: 459\r\n        Voluntary context switches: 1\r\n        Involuntary context switches: 12\r\n        Swaps: 0\r\n        File system inputs: 0\r\n        File system outputs: 0\r\n        Socket messages sent: 0\r\n        Socket messages received: 0\r\n        Signals delivered: 0\r\n        Page size (bytes): 4096\r\n        Exit status: 0\r\n\r\nreal    0m0.082s\r\nuser    0m0.000s\r\nsys     0m0.012s\r\n\r\nAudio Device:   Advanced Linux Sound Architecture (ALSA) output\r\n\r\nPlaying: /usr/share/sounds/KDE-Im-Irc-Event.ogg\r\nOgg Vorbis stream: 2 channel, 48000 Hz\r\n                                                                                \r\nDone.\r\n```\r\n\r\n### notes, caveats, troubleshooting\r\n\r\nThere are some escaping issues that can be uncovered by throwing lot’s of interpretation snafu at it in $@\r\ni.e. I imagine I’ll have to throw some escape trickery in there at some point.  I’ll fix it when I run into one of those cases, but for now I’m using this daily without issue.\r\nI’m open to suggestions on better encapsulation inside the script\r\n\r\nsome examples of how it might get borked are here:\r\nhttp://unix.stackexchange.com/questions/57830/trouble-in-script-with-spaces-in-filename\r\n\r\ne.g. this works fine\r\n```\r\nvv sudo cp -a 'VirtualBox VMs' /mnt/virtualbox/\r\n```\r\nbut this does not\r\n```\r\nvv sudo cp -a VirtualBox\\ VMs /mnt/virtualbox/\r\n```\r\n\r\nhttp://joshuacox.github.io/vv\r\n","google":"UA-69335315-1","note":"Don't delete this file! It's used internally to help with page regeneration."}